@namespace("org.ga4gh")
protocol VariantMethods {

import idl "variants.avdl";

/******************  /variantsets/search  *********************/
/** This request maps to the body of `POST /variantsets/search` as JSON. */
record SearchVariantSetsRequest {
  /**
  If nonempty, will restrict the query to variant sets within the given
  `Dataset`s. TODO: `Dataset` enumeration is in the Reads API.
  */
  array<string> datasetIds = [];
  
  /**
  Specifies the maximum number of results to return in a single page.
  If unspecified, a system default will be used.
  */
  union { null, int } pageSize = null;

  /**
  The continuation token, which is used to page through large result sets.
  To get the next page of results, set this parameter to the value of
  `nextPageToken` from the previous response.
  */
  union { null, string } pageToken = null;
}

/** This is the response from `POST /variantsets/search` expressed as JSON. */
record SearchVariantSetsResponse {
  /** The list of matching variant sets. */
  array<VariantSet> variantSets = [];

  /**
  The continuation token, which is used to page through large result sets.
  Provide this value in a subsequent request to return the next page of
  results. This field will be empty if there aren't any additional results.
  */
  union { null, string } nextPageToken = null;
}

/**
Gets a list of `VariantSet` matching the search criteria.

`POST /variantsets/search` must accept a JSON version of
`SearchVariantSetsRequest` as the post body and will return a JSON version
of `SearchVariantSetsResponse`.
*/
SearchVariantSetsResponse searchVariantSets(
  /** This request maps to the body of `POST /variantsets/search` as JSON. */
  SearchVariantSetsRequest request) throws GAException;
  
/****************  /variantsets/{id}  *******************/
/**
Gets a `VariantSet` by ID.
`GET /variantsets/{id}` will return a JSON version of `VariantSet`.
*/
VariantSet getVariantSet(
  /**
  The ID of the `VariantSet`.
  */
  string id) throws GAException;

/******************  /variants/search  *********************/
/** This request maps to the body of `POST /variants/search` as JSON. */
record SearchVariantsRequest {

  /**
  If nonempty, only return `Variant`s defined in one of the specified
  `VariantSet`s.
  */
  array<string> variantSetIds = [];

  /**
  If nonempty, only return `Variant`s including at least one `Segment` of a
  `Reference` with an ID on this list.
  */
  array<string> referenceIds = [];

  /**
  Specifies the maximum number of results to return in a single page.
  If unspecified, a system default will be used.
  */
  union { null, int } pageSize = null;

  /**
  The continuation token, which is used to page through large result sets.
  To get the next page of results, set this parameter to the value of
  `nextPageToken` from the previous response.
  */
  union { null, string } pageToken = null;
}

/**
This is the response from `POST /variants/search` expressed as JSON.
*/
record SearchVariantsResponse {
  /** The list of matching `Variant`s. */
  array<Variant> variants = [];

  /**
  The continuation token, which is used to page through large result sets.
  Provide this value in a subsequent request to return the next page of
  results. This field will be empty if there aren't any additional results.
  */
  union { null, string } nextPageToken = null;
}

/**
Gets a list of `Variant`s matching the search criteria.

`POST /variants/search` must accept a JSON version of `SearchVariantsRequest` as
the post body and will return a JSON version of `SearchVariantsResponse`.
*/
SearchVariantsResponse searchVariants(
  /**
  This request maps to the body of `POST /variants/search` as JSON.
  */
  SearchVariantsRequest request) throws org.ga4gh.GAException;

/****************  /variants/{id}  *******************/
/**
Gets a `Variant` by ID.
`GET /variants/{id}` will return a JSON version of `Variant`.
*/
Variant getVariant(
  /**
  The ID of the `Variant`.
  */
  string id) throws GAException;

/******************  /calls/search  *********************/
/** This request maps to the body of `POST /calls/search` as JSON. */
record SearchCallsRequest {

  /**
  If nonempty, only return the `Call`s in these `CallSet`s.
  */
  array<string> callSetIds = [];

  /**
  If nonempty, return only `Call`s in these `VariantSet`s.
  */
  array<string> variantSetIds = [];
  
  /**
  If nonempty, return only `Call`s invloving one of these `Variant`s.
  */
  array<string> variantIds = [];

  /**
  Specifies the maximum number of results to return in a single page.
  If unspecified, a system default will be used.
  */
  union { null, int } pageSize = null;

  /**
  The continuation token, which is used to page through large result sets.
  To get the next page of results, set this parameter to the value of
  `nextPageToken` from the previous response.
  */
  union { null, string } pageToken = null;
}

/**
This is the response from `POST /calls/search` expressed as JSON.
*/
record SearchCallsResponse {
  /** The list of matching calls. */
  array<Call> calls = [];

  /**
  The continuation token, which is used to page through large result sets.
  Provide this value in a subsequent request to return the next page of
  results. This field will be empty if there aren't any additional results.
  */
  union { null, string } nextPageToken = null;
}

/**
Gets a list of `Call` matching the search criteria.

`POST /calls/search` must accept a JSON version of
`SearchCallsRequest` as the post body and will return a JSON version of
`SearchCallsResponse`.
*/
SearchCallsResponse searchCalls(
  /** This request maps to the body of `POST /calls/search` as JSON. */
  SearchCallsRequest request) throws org.ga4gh.GAException;

/******************  /callsets/search  *********************/
/** This request maps to the body of `POST /callsets/search` as JSON. */
record SearchCallSetsRequest {
  /**
  If nonempty, will restrict the query to call sets within the
  given variant sets.
  */
  array<string> variantSetIds = [];

  /**
  Only return call sets for which a substring of the name matches this
  string.
  */
  union { null, string } name = null;
  
  /**
  Return only `CallSet`s with one of these sampleIds.
  */
  array<string> sampleIds = [];
  
  /**
  Return only `CallSet`s with the given type.
  */
  union { null, CallSetType } callSetType = null;

  /**
  Specifies the maximum number of results to return in a single page.
  If unspecified, a system default will be used.
  */
  union { null, int } pageSize = null;

  /**
  The continuation token, which is used to page through large result sets.
  To get the next page of results, set this parameter to the value of
  `nextPageToken` from the previous response.
  */
  union { null, string } pageToken = null;
}

/** This is the response from `POST /callsets/search` expressed as JSON. */
record SearchCallSetsResponse {
  /** The list of matching call sets. */
  array<CallSet> callSets = [];

  /**
  The continuation token, which is used to page through large result sets.
  Provide this value in a subsequent request to return the next page of
  results. This field will be empty if there aren't any additional results.
  */
  union { null, string } nextPageToken = null;
}

/**
Gets a list of `CallSet` matching the search criteria.

`POST /callsets/search` must accept a JSON version of `SearchCallSetsRequest`
as the post body and will return a JSON version of `SearchCallSetsResponse`.
*/
SearchCallSetsResponse searchCallSets(
  /** This request maps to the body of `POST /callsets/search` as JSON. */
  SearchCallSetsRequest request) throws GAException;

/****************  /callsets/{id}  *******************/
/**
Gets a `CallSet` by ID.
`GET /callsets/{id}` will return a JSON version of `CallSet`.
*/
CallSet getCallSet(
  /**
  The ID of the `CallSet`.
  */
  string id) throws GAException;
  
/******************  /variantscaffolds/search  *********************/
/**
This request maps to the body of `POST /variantscaffolds/search` as JSON.
*/
record SearchVariantScaffoldsRequest {

  /**
  If nonempty, return only `VariantScaffold`s involving calls in one of the
  specified callsets.
  */
  array<string> callSetIds = [];
  
  /**
  If nonempty, return only `VariantScaffold`s invloving calls on one of the
  specified `Variant`s.
  */
  array<string> variantIds = [];

  /**
  Specifies the maximum number of results to return in a single page.
  If unspecified, a system default will be used.
  */
  union { null, int } pageSize = null;

  /**
  The continuation token, which is used to page through large result sets.
  To get the next page of results, set this parameter to the value of
  `nextPageToken` from the previous response.
  */
  union { null, string } pageToken = null;
}

/**
This is the response from `POST /variantscaffolds/search` expressed as JSON.
*/
record SearchVariantScaffoldsResponse {
  /** The list of `VariantScaffold`s. */
  array<VariantScaffold> VariantScaffolds = [];

  /**
  The continuation token, which is used to page through large result sets.
  Provide this value in a subsequent request to return the next page of
  results. This field will be empty if there aren't any additional results.
  */
  union { null, string } nextPageToken = null;
}

/**
Gets a list of `VariantScaffold`s matching the search criteria.

`POST /variantscaffolds/search` must accept a JSON version of
`SearchVariantScaffoldsRequest` as the post body and will return a JSON
version of `SearchVariantScaffoldsResponse`.
*/
SearchVariantScaffoldsResponse searchVariantScaffolds(
  /**
  This request maps to the body of `POST /variantscaffolds/search` as
  JSON.
  */
  SearchVariantScaffoldsRequest request) throws org.ga4gh.GAException;
}
